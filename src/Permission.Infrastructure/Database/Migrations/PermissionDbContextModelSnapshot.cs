// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Permission.Infrastructure.Database;

#nullable disable

namespace Permission.Infrastructure.Database.Migrations
{
    [DbContext(typeof(PermissionDbContext))]
    partial class PermissionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Permission.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeForename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PermissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PermissionTypeId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionTypeId");

                    b.HasIndex("PermissionTypeId1");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Permission.Domain.Entities.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("PermissionType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Vacation"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sick Leave"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Personal Leave"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Bereavement Leave"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Jury Duty"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Parental Leave"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Unpaid Leave"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Remote Work"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Study Leave"
                        });
                });

            modelBuilder.Entity("Permission.Domain.Entities.Permission", b =>
                {
                    b.HasOne("Permission.Domain.Entities.PermissionType", "PermissionType")
                        .WithMany()
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Permission.Domain.Entities.PermissionType", null)
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionTypeId1");

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("Permission.Domain.Entities.PermissionType", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
