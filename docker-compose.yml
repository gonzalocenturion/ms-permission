services:
  permission.api:
    image: ${DOCKER_REGISTRY-}permissionapi
    container_name: ms-permission
    build:
      context: .
      dockerfile: src/Permission.API/Dockerfile
    ports:
      - 5000:8080
      - 5001:8085
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ConnectionStrings__Database=Server=${SQL_SERVER};Database=${DB_NAME};User=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=True;Encrypt=False;
      - KafkaHost=${KAFKA_HOST}
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft.AspNetCore=Warning
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__1__Name=Elasticsearch
      - Serilog__WriteTo__1__Args__nodeUris=http://elasticsearch:9200
      - Serilog__WriteTo__1__Args__indexFormat=permission_system-{0:yyyy.MM.dd}
      - Serilog__WriteTo__1__Args__numberOfShards=2
      - Serilog__WriteTo__1__Args__numberOfReplicas=1
      - Serilog__WriteTo__1__Args__inlineFields=true
      - Serilog__WriteTo__1__Args__autoRegisterTemplate=true
      - Serilog__Enrich__0=FromLogContext
      - Serilog__Enrich__1=WithMachineName
      - Serilog__Enrich__2=WithThreadId
      - Serilog__Properties__Application=ms-permission
  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: sqlserver
    ports:
      - '1433:1433'
    environment:
      SA_PASSWORD: "@dm1n123"
      ACCEPT_EULA: "Y"
    volumes:
     - /d/repos/Challenges/Empresa_N5/ms-permission/containers/db:/var/opt/mssql/data 
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "@dm1n123", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1    
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.8.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "broker:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  schema-registry:
    image: confluentinc/cp-schema-registry:7.8.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-tools:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka
    container_name: kafka
    command: ["tail", "-f", "/dev/null"]
    network_mode: "host"
 
